/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/airrflow Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input parameters
    input = null
    mode = "fastq"
    miairr="$projectDir/assets/reveal/mapping_MiAIRR_BioSample_v1.3.1.tsv"
    index_file = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/airrflow/'

    // ----------------------------
    // sequencing protocol options
    // ----------------------------
    library_generation_method = null
    race_linker = null

    // Primer and UMI inputs
    cprimers = null
    vprimers = null
    vprimer_start = 0
    cprimer_start = 0
    cprimer_position = 'R1'
    primer_revpr = false

    // UMI and primer handling
    umi_position = 'R1'
    umi_length = -1
    umi_start = 0

    // trimming options
    trim_fastq = true
    adapter_fasta = null
    clip_r1 = 0
    clip_r2 = 0
    three_prime_clip_r1 = 0
    three_prime_clip_r2 = 0
    trim_nextseq = false
    save_trimmed = false

    // --------------------------
    // sequence assembly options
    // --------------------------
    // Filter sequences
    filterseq_q = 20

    // Mask primers
    primer_r1_maxerror = 0.2
    primer_r2_maxerror = 0.2
    primer_r1_mask_mode = 'cut'
    primer_r2_mask_mode = 'cut'
    maskprimers_align_race = false
    maskprimers_align = false
    maskprimers_extract = false
    primer_r1_extract_len = 0
    primer_r2_extract_len = 0
    primer_maxlen = 50

    // Build consensus
    primer_consensus = 0.6
    buildconsensus_maxerror = 0.1
    buildconsensus_maxgap = 0.5
    cluster_sets = true

    // Assemble pairs
    assemblepairs_sequential = false
    assemblepairs_join = false

    // internal cregion
    align_cregion = false
    internal_cregion_sequences = null
    cregion_maxlen = 100
    cregion_maxerror = 0.3
    cregion_mask_mode = 'tag'

    // -----------------------
    // vdj annotation options
    // -----------------------
    productive_only = true
    reassign = true
    reference_igblast = "${params.pipelines_testdata_base_path}database-cache/igblast_base.zip"
    reference_fasta = "${params.pipelines_testdata_base_path}database-cache/imgtdb_base.zip"
    fetch_imgt = false
    save_databases = true
    skip_alignment_filter = false

    // -----------------------
    // bulk filtering options
    // -----------------------
    remove_chimeric = false
    detect_contamination = false
    collapseby = 'sample_id'

    // -----------------------
    // clonal analysis options
    // -----------------------
    cloneby = 'subject_id'
    crossby = 'subject_id'
    singlecell = 'single_cell'
    clonal_threshold = 'auto'
    skip_all_clones_report = false
    skip_report_threshold = false

    // tree lineage options
    lineage_tree_builder = 'raxml'
    lineage_tree_exec = '/usr/local/bin/raxml-ng'
    lineage_trees = false

    // -----------------------
    // reporting options
    // -----------------------
    skip_report = false
    report_rmd = "$projectDir/assets/repertoire_comparison.Rmd"
    report_css = "$projectDir/assets/nf-core_style.css"
    report_logo = "$projectDir/assets/nf-core-airrflow_logo_light.png"
    report_logo_img = "$projectDir/assets/nf-core-airrflow_logo_reports.png"

    // -----------------------
    // Single cell raw input options
    // -----------------------
    reference_10x = null

    // -----------------------
    // raw RNA seq input options
    // -----------------------
    cell_barcode_read = null
    read_format = null
    umi_read = null


    // -----------------------
    // generic nf-core options
    // -----------------------

    // References
    igenomes_base              = 's3://ngi-igenomes/igenomes/'
    igenomes_ignore            = true

    // MultiQC options
    skip_multiqc               = false
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                       = null
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false

    // Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params            = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        conda.enabled = false
        singularity.enabled = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        conda.enabled = false
        charliecloud.enabled   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        apptainer.enabled      = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
    test_tcr { includeConfig 'conf/test_tcr.config' }
    test_no_umi { includeConfig 'conf/test_no_umi.config' }
    test_assembled_hs { includeConfig 'conf/test_assembled_hs.config' }
    test_assembled_mm { includeConfig 'conf/test_assembled_mm.config' }
    test_raw_immcantation_devel { includeConfig 'conf/test_raw_immcantation_devel.config' }
    test_assembled_immcantation_devel_hs { includeConfig 'conf/test_assembled_immcantation_devel_hs.config' }
    test_assembled_immcantation_devel_mm { includeConfig 'conf/test_assembled_immcantation_devel_mm.config' }
    test_nocluster { includeConfig 'conf/test_nocluster.config' }
    test_fetchimgt { includeConfig 'conf/test_fetchimgt.config' }
    test_10x_sc { includeConfig 'conf/test_10x_sc.config' }
    test_clontech_umi { includeConfig 'conf/test_clontech_umi.config' }
    test_maskprimers_extract { includeConfig 'conf/test_maskprimers_extract.config' }
    test_maskprimers_align {includeConfig 'conf/test_maskprimers_align.config' }
    test_nebnext_umi { includeConfig 'conf/test_nebnext_umi.config' }
    test_rnaseq_bulk { includeConfig 'conf/test_rnaseq_bulk.config' }
    test_rnaseq_sc { includeConfig 'conf/test_rnaseq_sc.config' }
    nebnext_umi_tcr { includeConfig 'conf/nebnext_umi_tcr.config' }
    nebnext_umi_bcr { includeConfig 'conf/nebnext_umi_bcr.config' }
    clontech_umi_bcr { includeConfig 'conf/clontech_umi_bcr.config' }
    clontech_umi_tcr { includeConfig 'conf/clontech_umi_tcr.config' }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load nf-core/airrflow custom profiles from different institutions.
// Optionally, you can add a pipeline-specific nf-core config at https://github.com/nf-core/configs
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/airrflow.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Load igenomes.config if required
includeConfig !params.igenomes_ignore ? 'conf/igenomes.config' : 'conf/igenomes_ignored.config'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    R_LIBS_SITE = "NULL"
    R_LIBS_USER = "NULL"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = """\
bash

set -e # Exit if a tool returns a non-zero status/exit code
set -u # Treat unset variables and parameters as an error
set -o pipefail # Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
set -C # No clobber - prevent output redirection from overwriting files.
"""

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/airrflow'
    author          = """Gisela Gabernet, Susanna Marquez, Alexander Peltzer"""
    homePage        = 'https://github.com/nf-core/airrflow'
    description     = """B and T cell repertoire analysis pipeline with the Immcantation framework."""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04.2'
    version         = '4.2.0'
    doi             = 'https://doi.org/10.1371/journal.pcbi.1012265'
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    help {
        enabled = true
        command = "nextflow run $manifest.name -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
-\033[2m----------------------------------------------------\033[0m-
                                        \033[0;32m,--.\033[0;30m/\033[0;32m,-.\033[0m
\033[0;34m        ___     __   __   __   ___     \033[0;32m/,-._.--~\'\033[0m
\033[0;34m  |\\ | |__  __ /  ` /  \\ |__) |__         \033[0;33m}  {\033[0m
\033[0;34m  | \\| |       \\__, \\__/ |  \\ |___     \033[0;32m\\`-._,-`-,\033[0m
                                        \033[0;32m`._,._,\'\033[0m
\033[0;35m  ${manifest.name} ${manifest.version}\033[0m
-\033[2m----------------------------------------------------\033[0m-
"""
        afterText = """${manifest.doi ? "* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "  https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* The nf-core framework
    https://doi.org/10.1038/s41587-020-0439-x

* Software dependencies
    https://github.com/${manifest.name}/blob/master/CITATIONS.md
"""
    }
    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
